services:
  web:
    build:
      context: ./services/web
      dockerfile: Dockerfile.prod
    command: gunicorn --bind 0.0.0.0:5000 manage:app
    volumes:
      - template_volume:/home/app/web/project/templates
    expose:
      - "5000"
    env_file:
      - ./.env.prod
      - ./.env.prod.db
    depends_on:
      - db
    networks:
      - flask-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      retries: 3    

  db:
    image: postgres:13
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    networks:
      - flask-network

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped
    links:
      - "db:pgsql-server"
    networks:
      - flask-network

  nginx:
    build: ./services/nginx
    volumes:
      - template_volume:/home/app/web/project/templates
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
            # - "1337:1337" # Exposing Nginx on port 1337
      - "1443:1443"  
    depends_on:
      - web
    networks:
      - flask-network
    # Nginx configuration file to be used
    # Make sure to update nginx.conf to match the proxying setup

networks:
  flask-network:
    driver: bridge

volumes:
  postgres_data_prod:
  static_volume:
  media_volume:
  template_volume:
